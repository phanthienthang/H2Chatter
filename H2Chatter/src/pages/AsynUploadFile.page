<apex:page sidebar="false" showHeader="false" standardStylesheets="false" controller="UploadFileController">

<apex:stylesheet value="{!URLFor($Resource.bootstrap, 'css/bootstrap.min.css')}"/>
<apex:stylesheet value="{!URLFor($Resource.asyn, 'css/style.css')}"/>

<apex:stylesheet value="{!URLFor($Resource.asyn, 'css/blueimp-gallery.min.css')}"/>

<apex:stylesheet value="{!URLFor($Resource.asyn, 'css/jquery.fileupload.css')}"/>
<apex:stylesheet value="{!URLFor($Resource.asyn, 'css/jquery.fileupload-ui.css')}"/>
<!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
<!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
<apex:stylesheet value="{!URLFor($Resource.asyn, 'css/jquery.fileupload.css')}"/>
<apex:stylesheet value="{!URLFor($Resource.asyn, 'css/jquery.fileupload-ui.css')}"/>

<div class="container">
    
    <!-- The file upload form used as target for the file upload widget -->
    <form id="fileupload" action="https://na15.salesforce.com/services/data/v29.0/chatter/me" method="POST" enctype="multipart/form-data">
        <!-- Redirect browsers with JavaScript disabled to the origin page -->
        
        <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
        <div class="row fileupload-buttonbar">
            <div class="col-lg-7">
                <!-- The fileinput-button span is used to style the file input field as button -->
                <span class="btn btn-success fileinput-button">
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>Add files...</span>
                    <input type="file" name="files[]" multiple='multiple'/>
                </span>
                <button type="submit" class="btn btn-primary start">
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start upload</span>
                </button>
                <button type="reset" class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel upload</span>
                </button>
                <button type="button" class="btn btn-danger delete">
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" class="toggle"/>
                <!-- The global file processing state -->
                <span class="fileupload-process"></span>
            </div>
            <!-- The global progress state -->
            <div class="col-lg-5 fileupload-progress fade">
                <!-- The global progress bar -->
                <div class="progress progress-striped active">
                    <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                </div>
                <!-- The extended global progress state -->
                <div class="progress-extended">&nbsp;</div>
            </div>
        </div>
        <!-- The table listing the files available for upload/download -->
        <table class="table table-striped"><tbody class="files"></tbody></table>
    </form>
    <br/>
   
</div>

<script id="template-upload" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
        <td>
            <span class="preview"></span>
        </td>
        <td>
            <p class="name">{%=file.name%}</p>
            <strong class="error text-danger"></strong>
        </td>
        <td>
            <p class="size">Processing...</p>
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
        </td>
        <td>
            {% if (!i && !o.options.autoUpload) { %}
                <button class="btn btn-primary start" disabled>
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start</span>
                </button>
            {% } %}
            {% if (!i) { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade">
        <td>
            <span class="preview">
                {% if (file.thumbnailUrl) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
                {% } %}
            </span>
        </td>
        <td>
            <p class="name">
                {% if (file.url) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
                {% } else { %}
                    <span>{%=file.name%}</span>
                {% } %}
            </p>
            {% if (file.error) { %}
                <div><span class="label label-danger">Error</span> {%=file.error%}</div>
            {% } %}
        </td>
        <td>
            <span class="size">{%=o.formatFileSize(file.size)%}</span>
        </td>
        <td>
            {% if (file.deleteUrl) { %}
                <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}"{% if (file.deleteWithCredentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" name="delete" value="1" class="toggle">
            {% } else { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}


</script>
<apex:includeScript value="{!$Resource.jquery}"/>

<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/vendor/jquery.ui.widget.js')}"/>

<!-- The Templates plugin is included to render the upload/download listings -->
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/tmpl.min.js')}"/>

<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/load-image.min.js')}"/>

<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/canvas-to-blob.min.js')}"/>

<!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/bootstrap.min.js')}"/>

<!-- blueimp Gallery script -->
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/jquery.blueimp-gallery.min.js')}"/>

<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/jquery.iframe-transport.js')}"/>

<!-- The basic File Upload plugin -->
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/jquery.fileupload.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/jquery.fileupload-process.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/jquery.fileupload-image.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/jquery.fileupload-audio.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/jquery.fileupload-video.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/jquery.fileupload-validate.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.asyn, 'js/jquery.fileupload-ui.js')}"/>



<script type="text/javascript">


	$(function () {
	    'use strict';
	
	    // Initialize the jQuery File Upload widget:
	    $('#fileupload').fileupload({
	        // Uncomment the following to send cross-domain cookies:
	        //xhrFields: {withCredentials: true},
	        url:'/services/data/v29.0/chatter/users/me/files',
            uploadTemplateId: 'template-upload',
            downloadTemplateId: 'template-download',
            
           
            add: function(e, data) {
                
                $.each(data.files, function(index, file){
                	var _data = {
                	token: "{!$Api.Session_ID}", 
                	fileName_upload: file,
                	fileName: file.name,
                	desc: "",
              	 	hiddenFileName: file.name,
                	shareOption_upload: "pvt",
                	mfu: 1	
                 };
	             data.formData = _data;
	             
                  });
                
                
                 $.ajax({
            		url: '/services/data/v29.0/chatter/users/me', 
            		
            		beforeSend: function(xhr) {
			            xhr.setRequestHeader('Authorization', 'Bearer {!$Api.Session_ID}');
			        },
			        success: function(response) {
			            //$('#results').text(JSON.stringify(response, null, '  '));
			             this.url = response.url+'/files';
			             
			             //data.formData = response; // e.g. {id: 123}
		            	 //$this.fileupload('send', data);
			            
			        },
			        error: function(jqXHR, textStatus, errorThrown) {
			            alert(jqXHR.status + ': ' + errorThrown);
			        }
		        });
            
            
            
                
                $.blueimp.fileupload.prototype.options.add.call(this, e, data);
                //$.blueimp.fileupload.prototype.options.url = '/services/data/v29.0/chatter/users/me/files'
            },
           /* submit: function(e, data) {
            
            	var $this = $(this);
            	$.ajax(
            	{
            		url: '/services/data/v29.0/chatter/users/me', 
            		
            		beforeSend: function(xhr) {
			            xhr.setRequestHeader('Authorization', 'Bearer {!$Api.Session_ID}');
			        },
			        success: function(response) {
			            //$('#results').text(JSON.stringify(response, null, '  '));
			             this.url = response.url+'/files';
			             
			             //data.formData = response; // e.g. {id: 123}
		            	 $this.fileupload('send', data);
			            
			        },
			        error: function(jqXHR, textStatus, errorThrown) {
			            alert(jqXHR.status + ': ' + errorThrown);
			        }
		        });
        		return false;
            }*/
	    });
	
	    // Enable iframe cross-domain access via redirect option:
	    $('#fileupload').fileupload(
	        'option',
	        'redirect',
	        window.location.href.replace(
	            /\/[^\/]*$/,
	            '/cors/result.html?%s'
	        )
	    );
	
	    if (window.location.hostname === 'blueimp.github.io') {
	        // Demo settings:
	        $('#fileupload').fileupload('option', {
	            url: '//jquery-file-upload.appspot.com/',
	            // Enable image resizing, except for Android and Opera,
	            // which actually support image resizing, but fail to
	            // send Blob objects via XHR requests:
	            disableImageResize: /Android(?!.*Chrome)|Opera/
	                .test(window.navigator.userAgent),
	            maxFileSize: 5000000,
	            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i
	        });
	        // Upload server status check for browsers with CORS support:
	        if ($.support.cors) {
	            $.ajax({
	                url: '//jquery-file-upload.appspot.com/',
	                type: 'HEAD'
	            }).fail(function () {
	                $('<div class="alert alert-danger"/>')
	                    .text('Upload server currently unavailable - ' +
	                            new Date())
	                    .appendTo('#fileupload');
	            });
	        }
	    } else {
	        // Load existing files:
	        $('#fileupload').addClass('fileupload-processing');
	        $.ajax({
	            // Uncomment the following to send cross-domain cookies:
	            //xhrFields: {withCredentials: true},
	            
	            url: $('#fileupload').fileupload('option', 'url'),
	            beforeSend: function(xhr) {
	               xhr.setRequestHeader('Authorization', 'Bearer {!$Api.Session_ID}');
	            },
	            dataType: 'json',
	            context: $('#fileupload')[0]
	        }).always(function () {
	            $(this).removeClass('fileupload-processing');
	        }).done(function (result) {
	            $(this).fileupload('option', 'done')
	                .call(this, $.Event('done'), {result: result});
	        });
	    }

	});  

</script>


</apex:page>